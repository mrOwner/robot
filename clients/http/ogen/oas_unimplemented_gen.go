// Code generated by ogen, DO NOT EDIT.

package ogen

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// InstrumentsServiceBondBy implements InstrumentsService_BondBy operation.
//
// Метод получения облигации по её идентификатору.
//
// POST /tinkoff.public.invest.api.contract.v1.InstrumentsService/BondBy
func (UnimplementedHandler) InstrumentsServiceBondBy(ctx context.Context, req *V1InstrumentRequest) (r InstrumentsServiceBondByRes, _ error) {
	return r, ht.ErrNotImplemented
}

// InstrumentsServiceBonds implements InstrumentsService_Bonds operation.
//
// Метод получения списка облигаций.
//
// POST /tinkoff.public.invest.api.contract.v1.InstrumentsService/Bonds
func (UnimplementedHandler) InstrumentsServiceBonds(ctx context.Context, req *V1InstrumentsRequest) (r InstrumentsServiceBondsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// InstrumentsServiceCurrencies implements InstrumentsService_Currencies operation.
//
// Метод получения списка валют.
//
// POST /tinkoff.public.invest.api.contract.v1.InstrumentsService/Currencies
func (UnimplementedHandler) InstrumentsServiceCurrencies(ctx context.Context, req *V1InstrumentsRequest) (r InstrumentsServiceCurrenciesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// InstrumentsServiceCurrencyBy implements InstrumentsService_CurrencyBy operation.
//
// Метод получения валюты по её идентификатору.
//
// POST /tinkoff.public.invest.api.contract.v1.InstrumentsService/CurrencyBy
func (UnimplementedHandler) InstrumentsServiceCurrencyBy(ctx context.Context, req *V1InstrumentRequest) (r InstrumentsServiceCurrencyByRes, _ error) {
	return r, ht.ErrNotImplemented
}

// InstrumentsServiceEditFavorites implements InstrumentsService_EditFavorites operation.
//
// Метод редактирования списка избранных инструментов.
//
// POST /tinkoff.public.invest.api.contract.v1.InstrumentsService/EditFavorites
func (UnimplementedHandler) InstrumentsServiceEditFavorites(ctx context.Context, req *V1EditFavoritesRequest) (r InstrumentsServiceEditFavoritesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// InstrumentsServiceEtfBy implements InstrumentsService_EtfBy operation.
//
// Метод получения инвестиционного фонда по его
// идентификатору.
//
// POST /tinkoff.public.invest.api.contract.v1.InstrumentsService/EtfBy
func (UnimplementedHandler) InstrumentsServiceEtfBy(ctx context.Context, req *V1InstrumentRequest) (r InstrumentsServiceEtfByRes, _ error) {
	return r, ht.ErrNotImplemented
}

// InstrumentsServiceEtfs implements InstrumentsService_Etfs operation.
//
// Метод получения списка инвестиционных фондов.
//
// POST /tinkoff.public.invest.api.contract.v1.InstrumentsService/Etfs
func (UnimplementedHandler) InstrumentsServiceEtfs(ctx context.Context, req *V1InstrumentsRequest) (r InstrumentsServiceEtfsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// InstrumentsServiceFindInstrument implements InstrumentsService_FindInstrument operation.
//
// Метод поиска инструмента.
//
// POST /tinkoff.public.invest.api.contract.v1.InstrumentsService/FindInstrument
func (UnimplementedHandler) InstrumentsServiceFindInstrument(ctx context.Context, req *V1FindInstrumentRequest) (r InstrumentsServiceFindInstrumentRes, _ error) {
	return r, ht.ErrNotImplemented
}

// InstrumentsServiceFutureBy implements InstrumentsService_FutureBy operation.
//
// Метод получения фьючерса по его идентификатору.
//
// POST /tinkoff.public.invest.api.contract.v1.InstrumentsService/FutureBy
func (UnimplementedHandler) InstrumentsServiceFutureBy(ctx context.Context, req *V1InstrumentRequest) (r InstrumentsServiceFutureByRes, _ error) {
	return r, ht.ErrNotImplemented
}

// InstrumentsServiceFutures implements InstrumentsService_Futures operation.
//
// Метод получения списка фьючерсов.
//
// POST /tinkoff.public.invest.api.contract.v1.InstrumentsService/Futures
func (UnimplementedHandler) InstrumentsServiceFutures(ctx context.Context, req *V1InstrumentsRequest) (r InstrumentsServiceFuturesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// InstrumentsServiceGetAccruedInterests implements InstrumentsService_GetAccruedInterests operation.
//
// Метод получения накопленного купонного дохода по
// облигации.
//
// POST /tinkoff.public.invest.api.contract.v1.InstrumentsService/GetAccruedInterests
func (UnimplementedHandler) InstrumentsServiceGetAccruedInterests(ctx context.Context, req *V1GetAccruedInterestsRequest) (r InstrumentsServiceGetAccruedInterestsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// InstrumentsServiceGetAssetBy implements InstrumentsService_GetAssetBy operation.
//
// Метод получения актива по его идентификатору.
//
// POST /tinkoff.public.invest.api.contract.v1.InstrumentsService/GetAssetBy
func (UnimplementedHandler) InstrumentsServiceGetAssetBy(ctx context.Context, req *V1AssetRequest) (r InstrumentsServiceGetAssetByRes, _ error) {
	return r, ht.ErrNotImplemented
}

// InstrumentsServiceGetAssets implements InstrumentsService_GetAssets operation.
//
// Метод получения списка активов.
//
// POST /tinkoff.public.invest.api.contract.v1.InstrumentsService/GetAssets
func (UnimplementedHandler) InstrumentsServiceGetAssets(ctx context.Context, req *V1AssetsRequest) (r InstrumentsServiceGetAssetsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// InstrumentsServiceGetBondCoupons implements InstrumentsService_GetBondCoupons operation.
//
// Метод получения графика выплат купонов по облигации.
//
// POST /tinkoff.public.invest.api.contract.v1.InstrumentsService/GetBondCoupons
func (UnimplementedHandler) InstrumentsServiceGetBondCoupons(ctx context.Context, req *V1GetBondCouponsRequest) (r InstrumentsServiceGetBondCouponsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// InstrumentsServiceGetBrandBy implements InstrumentsService_GetBrandBy operation.
//
// Метод получения бренда по его идентификатору.
//
// POST /tinkoff.public.invest.api.contract.v1.InstrumentsService/GetBrandBy
func (UnimplementedHandler) InstrumentsServiceGetBrandBy(ctx context.Context, req *V1GetBrandRequest) (r InstrumentsServiceGetBrandByRes, _ error) {
	return r, ht.ErrNotImplemented
}

// InstrumentsServiceGetBrands implements InstrumentsService_GetBrands operation.
//
// Метод получения списка брендов.
//
// POST /tinkoff.public.invest.api.contract.v1.InstrumentsService/GetBrands
func (UnimplementedHandler) InstrumentsServiceGetBrands(ctx context.Context, req *V1GetBrandsRequest) (r InstrumentsServiceGetBrandsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// InstrumentsServiceGetCountries implements InstrumentsService_GetCountries operation.
//
// Метод получения списка стран.
//
// POST /tinkoff.public.invest.api.contract.v1.InstrumentsService/GetCountries
func (UnimplementedHandler) InstrumentsServiceGetCountries(ctx context.Context, req *V1GetCountriesRequest) (r InstrumentsServiceGetCountriesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// InstrumentsServiceGetDividends implements InstrumentsService_GetDividends operation.
//
// Метод для получения событий выплаты дивидендов по
// инструменту.
//
// POST /tinkoff.public.invest.api.contract.v1.InstrumentsService/GetDividends
func (UnimplementedHandler) InstrumentsServiceGetDividends(ctx context.Context, req *V1GetDividendsRequest) (r InstrumentsServiceGetDividendsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// InstrumentsServiceGetFavorites implements InstrumentsService_GetFavorites operation.
//
// Метод получения списка избранных инструментов.
//
// POST /tinkoff.public.invest.api.contract.v1.InstrumentsService/GetFavorites
func (UnimplementedHandler) InstrumentsServiceGetFavorites(ctx context.Context, req *V1GetFavoritesRequest) (r InstrumentsServiceGetFavoritesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// InstrumentsServiceGetFuturesMargin implements InstrumentsService_GetFuturesMargin operation.
//
// Метод получения размера гарантийного обеспечения по
// фьючерсам.
//
// POST /tinkoff.public.invest.api.contract.v1.InstrumentsService/GetFuturesMargin
func (UnimplementedHandler) InstrumentsServiceGetFuturesMargin(ctx context.Context, req *V1GetFuturesMarginRequest) (r InstrumentsServiceGetFuturesMarginRes, _ error) {
	return r, ht.ErrNotImplemented
}

// InstrumentsServiceGetInstrumentBy implements InstrumentsService_GetInstrumentBy operation.
//
// Метод получения основной информации об инструменте.
//
// POST /tinkoff.public.invest.api.contract.v1.InstrumentsService/GetInstrumentBy
func (UnimplementedHandler) InstrumentsServiceGetInstrumentBy(ctx context.Context, req *V1InstrumentRequest) (r InstrumentsServiceGetInstrumentByRes, _ error) {
	return r, ht.ErrNotImplemented
}

// InstrumentsServiceOptionBy implements InstrumentsService_OptionBy operation.
//
// Метод получения опциона по его идентификатору.
//
// POST /tinkoff.public.invest.api.contract.v1.InstrumentsService/OptionBy
func (UnimplementedHandler) InstrumentsServiceOptionBy(ctx context.Context, req *V1InstrumentRequest) (r InstrumentsServiceOptionByRes, _ error) {
	return r, ht.ErrNotImplemented
}

// InstrumentsServiceOptions implements InstrumentsService_Options operation.
//
// Метод получения списка опционов.
//
// POST /tinkoff.public.invest.api.contract.v1.InstrumentsService/Options
func (UnimplementedHandler) InstrumentsServiceOptions(ctx context.Context, req *V1InstrumentsRequest) (r InstrumentsServiceOptionsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// InstrumentsServiceShareBy implements InstrumentsService_ShareBy operation.
//
// Метод получения акции по её идентификатору.
//
// POST /tinkoff.public.invest.api.contract.v1.InstrumentsService/ShareBy
func (UnimplementedHandler) InstrumentsServiceShareBy(ctx context.Context, req *V1InstrumentRequest) (r InstrumentsServiceShareByRes, _ error) {
	return r, ht.ErrNotImplemented
}

// InstrumentsServiceShares implements InstrumentsService_Shares operation.
//
// Метод получения списка акций.
//
// POST /tinkoff.public.invest.api.contract.v1.InstrumentsService/Shares
func (UnimplementedHandler) InstrumentsServiceShares(ctx context.Context, req *V1InstrumentsRequest) (r InstrumentsServiceSharesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// InstrumentsServiceTradingSchedules implements InstrumentsService_TradingSchedules operation.
//
// Метод получения расписания торгов торговых площадок.
//
// POST /tinkoff.public.invest.api.contract.v1.InstrumentsService/TradingSchedules
func (UnimplementedHandler) InstrumentsServiceTradingSchedules(ctx context.Context, req *V1TradingSchedulesRequest) (r InstrumentsServiceTradingSchedulesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// MarketDataServiceGetCandles implements MarketDataService_GetCandles operation.
//
// Метод запроса исторических свечей по инструменту.
//
// POST /tinkoff.public.invest.api.contract.v1.MarketDataService/GetCandles
func (UnimplementedHandler) MarketDataServiceGetCandles(ctx context.Context, req *V1GetCandlesRequest) (r MarketDataServiceGetCandlesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// MarketDataServiceGetClosePrices implements MarketDataService_GetClosePrices operation.
//
// Метод запроса цен закрытия торговой сессии по
// инструментам.
//
// POST /tinkoff.public.invest.api.contract.v1.MarketDataService/GetClosePrices
func (UnimplementedHandler) MarketDataServiceGetClosePrices(ctx context.Context, req *V1GetClosePricesRequest) (r MarketDataServiceGetClosePricesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// MarketDataServiceGetLastPrices implements MarketDataService_GetLastPrices operation.
//
// Метод запроса цен последних сделок по инструментам.
//
// POST /tinkoff.public.invest.api.contract.v1.MarketDataService/GetLastPrices
func (UnimplementedHandler) MarketDataServiceGetLastPrices(ctx context.Context, req *V1GetLastPricesRequest) (r MarketDataServiceGetLastPricesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// MarketDataServiceGetLastTrades implements MarketDataService_GetLastTrades operation.
//
// Метод запроса обезличенных сделок за последний час.
//
// POST /tinkoff.public.invest.api.contract.v1.MarketDataService/GetLastTrades
func (UnimplementedHandler) MarketDataServiceGetLastTrades(ctx context.Context, req *V1GetLastTradesRequest) (r MarketDataServiceGetLastTradesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// MarketDataServiceGetOrderBook implements MarketDataService_GetOrderBook operation.
//
// Метод получения стакана по инструменту.
//
// POST /tinkoff.public.invest.api.contract.v1.MarketDataService/GetOrderBook
func (UnimplementedHandler) MarketDataServiceGetOrderBook(ctx context.Context, req *V1GetOrderBookRequest) (r MarketDataServiceGetOrderBookRes, _ error) {
	return r, ht.ErrNotImplemented
}

// MarketDataServiceGetTradingStatus implements MarketDataService_GetTradingStatus operation.
//
// Метод запроса статуса торгов по инструментам.
//
// POST /tinkoff.public.invest.api.contract.v1.MarketDataService/GetTradingStatus
func (UnimplementedHandler) MarketDataServiceGetTradingStatus(ctx context.Context, req *V1GetTradingStatusRequest) (r MarketDataServiceGetTradingStatusRes, _ error) {
	return r, ht.ErrNotImplemented
}

// MarketDataServiceGetTradingStatuses implements MarketDataService_GetTradingStatuses operation.
//
// Метод запроса статуса торгов по инструментам.
//
// POST /tinkoff.public.invest.api.contract.v1.MarketDataService/GetTradingStatuses
func (UnimplementedHandler) MarketDataServiceGetTradingStatuses(ctx context.Context, req *V1GetTradingStatusesRequest) (r MarketDataServiceGetTradingStatusesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// OperationsServiceGetBrokerReport implements OperationsService_GetBrokerReport operation.
//
// Метод получения брокерского отчёта.
//
// POST /tinkoff.public.invest.api.contract.v1.OperationsService/GetBrokerReport
func (UnimplementedHandler) OperationsServiceGetBrokerReport(ctx context.Context, req *V1BrokerReportRequest) (r OperationsServiceGetBrokerReportRes, _ error) {
	return r, ht.ErrNotImplemented
}

// OperationsServiceGetDividendsForeignIssuer implements OperationsService_GetDividendsForeignIssuer operation.
//
// Метод получения отчёта "Справка о доходах за
// пределами РФ".
//
// POST /tinkoff.public.invest.api.contract.v1.OperationsService/GetDividendsForeignIssuer
func (UnimplementedHandler) OperationsServiceGetDividendsForeignIssuer(ctx context.Context, req *V1GetDividendsForeignIssuerRequest) (r OperationsServiceGetDividendsForeignIssuerRes, _ error) {
	return r, ht.ErrNotImplemented
}

// OperationsServiceGetOperations implements OperationsService_GetOperations operation.
//
// Метод получения списка операций по счёту.При работе с
// данным методом необходимо учитывать
// [особенности взаимодействия](/investAPI/operations_problems) с
// данным методом.
//
// POST /tinkoff.public.invest.api.contract.v1.OperationsService/GetOperations
func (UnimplementedHandler) OperationsServiceGetOperations(ctx context.Context, req *V1OperationsRequest) (r OperationsServiceGetOperationsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// OperationsServiceGetOperationsByCursor implements OperationsService_GetOperationsByCursor operation.
//
// Метод получения списка операций по счёту с
// пагинацией. При работе с данным методом необходимо
// учитывать
// [особенности взаимодействия](/investAPI/operations_problems) с
// данным методом.
//
// POST /tinkoff.public.invest.api.contract.v1.OperationsService/GetOperationsByCursor
func (UnimplementedHandler) OperationsServiceGetOperationsByCursor(ctx context.Context, req *V1GetOperationsByCursorRequest) (r OperationsServiceGetOperationsByCursorRes, _ error) {
	return r, ht.ErrNotImplemented
}

// OperationsServiceGetPortfolio implements OperationsService_GetPortfolio operation.
//
// Метод получения портфеля по счёту.
//
// POST /tinkoff.public.invest.api.contract.v1.OperationsService/GetPortfolio
func (UnimplementedHandler) OperationsServiceGetPortfolio(ctx context.Context, req *V1PortfolioRequest) (r OperationsServiceGetPortfolioRes, _ error) {
	return r, ht.ErrNotImplemented
}

// OperationsServiceGetPositions implements OperationsService_GetPositions operation.
//
// Метод получения списка позиций по счёту.
//
// POST /tinkoff.public.invest.api.contract.v1.OperationsService/GetPositions
func (UnimplementedHandler) OperationsServiceGetPositions(ctx context.Context, req *V1PositionsRequest) (r OperationsServiceGetPositionsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// OperationsServiceGetWithdrawLimits implements OperationsService_GetWithdrawLimits operation.
//
// Метод получения доступного остатка для вывода
// средств.
//
// POST /tinkoff.public.invest.api.contract.v1.OperationsService/GetWithdrawLimits
func (UnimplementedHandler) OperationsServiceGetWithdrawLimits(ctx context.Context, req *V1WithdrawLimitsRequest) (r OperationsServiceGetWithdrawLimitsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// OrdersServiceCancelOrder implements OrdersService_CancelOrder operation.
//
// Метод отмены биржевой заявки.
//
// POST /tinkoff.public.invest.api.contract.v1.OrdersService/CancelOrder
func (UnimplementedHandler) OrdersServiceCancelOrder(ctx context.Context, req *V1CancelOrderRequest) (r OrdersServiceCancelOrderRes, _ error) {
	return r, ht.ErrNotImplemented
}

// OrdersServiceGetOrderState implements OrdersService_GetOrderState operation.
//
// Метод получения статуса торгового поручения.
//
// POST /tinkoff.public.invest.api.contract.v1.OrdersService/GetOrderState
func (UnimplementedHandler) OrdersServiceGetOrderState(ctx context.Context, req *V1GetOrderStateRequest) (r OrdersServiceGetOrderStateRes, _ error) {
	return r, ht.ErrNotImplemented
}

// OrdersServiceGetOrders implements OrdersService_GetOrders operation.
//
// Метод получения списка активных заявок по счёту.
//
// POST /tinkoff.public.invest.api.contract.v1.OrdersService/GetOrders
func (UnimplementedHandler) OrdersServiceGetOrders(ctx context.Context, req *V1GetOrdersRequest) (r OrdersServiceGetOrdersRes, _ error) {
	return r, ht.ErrNotImplemented
}

// OrdersServicePostOrder implements OrdersService_PostOrder operation.
//
// Метод выставления заявки.
//
// POST /tinkoff.public.invest.api.contract.v1.OrdersService/PostOrder
func (UnimplementedHandler) OrdersServicePostOrder(ctx context.Context, req *V1PostOrderRequest) (r OrdersServicePostOrderRes, _ error) {
	return r, ht.ErrNotImplemented
}

// OrdersServiceReplaceOrder implements OrdersService_ReplaceOrder operation.
//
// Метод изменения выставленной заявки.
//
// POST /tinkoff.public.invest.api.contract.v1.OrdersService/ReplaceOrder
func (UnimplementedHandler) OrdersServiceReplaceOrder(ctx context.Context, req *V1ReplaceOrderRequest) (r OrdersServiceReplaceOrderRes, _ error) {
	return r, ht.ErrNotImplemented
}

// SandboxServiceCancelSandboxOrder implements SandboxService_CancelSandboxOrder operation.
//
// Метод отмены торгового поручения в песочнице.
//
// POST /tinkoff.public.invest.api.contract.v1.SandboxService/CancelSandboxOrder
func (UnimplementedHandler) SandboxServiceCancelSandboxOrder(ctx context.Context, req *V1CancelOrderRequest) (r SandboxServiceCancelSandboxOrderRes, _ error) {
	return r, ht.ErrNotImplemented
}

// SandboxServiceCloseSandboxAccount implements SandboxService_CloseSandboxAccount operation.
//
// Метод закрытия счёта в песочнице.
//
// POST /tinkoff.public.invest.api.contract.v1.SandboxService/CloseSandboxAccount
func (UnimplementedHandler) SandboxServiceCloseSandboxAccount(ctx context.Context, req *V1CloseSandboxAccountRequest) (r SandboxServiceCloseSandboxAccountRes, _ error) {
	return r, ht.ErrNotImplemented
}

// SandboxServiceGetSandboxAccounts implements SandboxService_GetSandboxAccounts operation.
//
// Метод получения счетов в песочнице.
//
// POST /tinkoff.public.invest.api.contract.v1.SandboxService/GetSandboxAccounts
func (UnimplementedHandler) SandboxServiceGetSandboxAccounts(ctx context.Context, req *V1GetAccountsRequest) (r SandboxServiceGetSandboxAccountsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// SandboxServiceGetSandboxOperations implements SandboxService_GetSandboxOperations operation.
//
// Метод получения операций в песочнице по номеру счёта.
//
// POST /tinkoff.public.invest.api.contract.v1.SandboxService/GetSandboxOperations
func (UnimplementedHandler) SandboxServiceGetSandboxOperations(ctx context.Context, req *V1OperationsRequest) (r SandboxServiceGetSandboxOperationsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// SandboxServiceGetSandboxOperationsByCursor implements SandboxService_GetSandboxOperationsByCursor operation.
//
// Метод получения операций в песочнице по номеру счета
// с пагинацией.
//
// POST /tinkoff.public.invest.api.contract.v1.SandboxService/GetSandboxOperationsByCursor
func (UnimplementedHandler) SandboxServiceGetSandboxOperationsByCursor(ctx context.Context, req *V1GetOperationsByCursorRequest) (r SandboxServiceGetSandboxOperationsByCursorRes, _ error) {
	return r, ht.ErrNotImplemented
}

// SandboxServiceGetSandboxOrderState implements SandboxService_GetSandboxOrderState operation.
//
// Метод получения статуса заявки в песочнице.
//
// POST /tinkoff.public.invest.api.contract.v1.SandboxService/GetSandboxOrderState
func (UnimplementedHandler) SandboxServiceGetSandboxOrderState(ctx context.Context, req *V1GetOrderStateRequest) (r SandboxServiceGetSandboxOrderStateRes, _ error) {
	return r, ht.ErrNotImplemented
}

// SandboxServiceGetSandboxOrders implements SandboxService_GetSandboxOrders operation.
//
// Метод получения списка активных заявок по счёту в
// песочнице.
//
// POST /tinkoff.public.invest.api.contract.v1.SandboxService/GetSandboxOrders
func (UnimplementedHandler) SandboxServiceGetSandboxOrders(ctx context.Context, req *V1GetOrdersRequest) (r SandboxServiceGetSandboxOrdersRes, _ error) {
	return r, ht.ErrNotImplemented
}

// SandboxServiceGetSandboxPortfolio implements SandboxService_GetSandboxPortfolio operation.
//
// Метод получения портфолио в песочнице.
//
// POST /tinkoff.public.invest.api.contract.v1.SandboxService/GetSandboxPortfolio
func (UnimplementedHandler) SandboxServiceGetSandboxPortfolio(ctx context.Context, req *V1PortfolioRequest) (r SandboxServiceGetSandboxPortfolioRes, _ error) {
	return r, ht.ErrNotImplemented
}

// SandboxServiceGetSandboxPositions implements SandboxService_GetSandboxPositions operation.
//
// Метод получения позиций по виртуальному счёту
// песочницы.
//
// POST /tinkoff.public.invest.api.contract.v1.SandboxService/GetSandboxPositions
func (UnimplementedHandler) SandboxServiceGetSandboxPositions(ctx context.Context, req *V1PositionsRequest) (r SandboxServiceGetSandboxPositionsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// SandboxServiceGetSandboxWithdrawLimits implements SandboxService_GetSandboxWithdrawLimits operation.
//
// Метод получения доступного остатка для вывода
// средств в песочнице.
//
// POST /tinkoff.public.invest.api.contract.v1.SandboxService/GetSandboxWithdrawLimits
func (UnimplementedHandler) SandboxServiceGetSandboxWithdrawLimits(ctx context.Context, req *V1WithdrawLimitsRequest) (r SandboxServiceGetSandboxWithdrawLimitsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// SandboxServiceOpenSandboxAccount implements SandboxService_OpenSandboxAccount operation.
//
// Метод регистрации счёта в песочнице.
//
// POST /tinkoff.public.invest.api.contract.v1.SandboxService/OpenSandboxAccount
func (UnimplementedHandler) SandboxServiceOpenSandboxAccount(ctx context.Context, req *V1OpenSandboxAccountRequest) (r SandboxServiceOpenSandboxAccountRes, _ error) {
	return r, ht.ErrNotImplemented
}

// SandboxServicePostSandboxOrder implements SandboxService_PostSandboxOrder operation.
//
// Метод выставления торгового поручения в песочнице.
//
// POST /tinkoff.public.invest.api.contract.v1.SandboxService/PostSandboxOrder
func (UnimplementedHandler) SandboxServicePostSandboxOrder(ctx context.Context, req *V1PostOrderRequest) (r SandboxServicePostSandboxOrderRes, _ error) {
	return r, ht.ErrNotImplemented
}

// SandboxServiceReplaceSandboxOrder implements SandboxService_ReplaceSandboxOrder operation.
//
// Метод изменения выставленной заявки.
//
// POST /tinkoff.public.invest.api.contract.v1.SandboxService/ReplaceSandboxOrder
func (UnimplementedHandler) SandboxServiceReplaceSandboxOrder(ctx context.Context, req *V1ReplaceOrderRequest) (r SandboxServiceReplaceSandboxOrderRes, _ error) {
	return r, ht.ErrNotImplemented
}

// SandboxServiceSandboxPayIn implements SandboxService_SandboxPayIn operation.
//
// Метод пополнения счёта в песочнице.
//
// POST /tinkoff.public.invest.api.contract.v1.SandboxService/SandboxPayIn
func (UnimplementedHandler) SandboxServiceSandboxPayIn(ctx context.Context, req *V1SandboxPayInRequest) (r SandboxServiceSandboxPayInRes, _ error) {
	return r, ht.ErrNotImplemented
}

// StopOrdersServiceCancelStopOrder implements StopOrdersService_CancelStopOrder operation.
//
// Метод отмены стоп-заявки.
//
// POST /tinkoff.public.invest.api.contract.v1.StopOrdersService/CancelStopOrder
func (UnimplementedHandler) StopOrdersServiceCancelStopOrder(ctx context.Context, req *V1CancelStopOrderRequest) (r StopOrdersServiceCancelStopOrderRes, _ error) {
	return r, ht.ErrNotImplemented
}

// StopOrdersServiceGetStopOrders implements StopOrdersService_GetStopOrders operation.
//
// Метод получения списка активных стоп заявок по счёту.
//
// POST /tinkoff.public.invest.api.contract.v1.StopOrdersService/GetStopOrders
func (UnimplementedHandler) StopOrdersServiceGetStopOrders(ctx context.Context, req *V1GetStopOrdersRequest) (r StopOrdersServiceGetStopOrdersRes, _ error) {
	return r, ht.ErrNotImplemented
}

// StopOrdersServicePostStopOrder implements StopOrdersService_PostStopOrder operation.
//
// Метод выставления стоп-заявки.
//
// POST /tinkoff.public.invest.api.contract.v1.StopOrdersService/PostStopOrder
func (UnimplementedHandler) StopOrdersServicePostStopOrder(ctx context.Context, req *V1PostStopOrderRequest) (r StopOrdersServicePostStopOrderRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UsersServiceGetAccounts implements UsersService_GetAccounts operation.
//
// Метод получения счетов пользователя.
//
// POST /tinkoff.public.invest.api.contract.v1.UsersService/GetAccounts
func (UnimplementedHandler) UsersServiceGetAccounts(ctx context.Context, req *V1GetAccountsRequest) (r UsersServiceGetAccountsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UsersServiceGetInfo implements UsersService_GetInfo operation.
//
// Метод получения информации о пользователе.
//
// POST /tinkoff.public.invest.api.contract.v1.UsersService/GetInfo
func (UnimplementedHandler) UsersServiceGetInfo(ctx context.Context, req *V1GetInfoRequest) (r UsersServiceGetInfoRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UsersServiceGetMarginAttributes implements UsersService_GetMarginAttributes operation.
//
// Расчёт маржинальных показателей по счёту.
//
// POST /tinkoff.public.invest.api.contract.v1.UsersService/GetMarginAttributes
func (UnimplementedHandler) UsersServiceGetMarginAttributes(ctx context.Context, req *V1GetMarginAttributesRequest) (r UsersServiceGetMarginAttributesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UsersServiceGetUserTariff implements UsersService_GetUserTariff operation.
//
// Запрос тарифа пользователя.
//
// POST /tinkoff.public.invest.api.contract.v1.UsersService/GetUserTariff
func (UnimplementedHandler) UsersServiceGetUserTariff(ctx context.Context, req *V1GetUserTariffRequest) (r UsersServiceGetUserTariffRes, _ error) {
	return r, ht.ErrNotImplemented
}
